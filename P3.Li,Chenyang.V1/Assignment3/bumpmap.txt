


varying vec3 N;
varying vec3 v;    

uniform sampler2D color_texture;

out vec4 colorOut;


void main (void)  
{  

   //Ross: Here's a hint on how to get the light source position
    vec3 lp = gl_LightSource[0].position.xyz; 
    vec3 ld = normalize( -v+ lp); 
    vec3 ed = normalize( v );
   
	vec4 SurfaceColor = vec4(0.7,0.5,0.18,1.0);
	float BumpDensity = 8.0;
	float BumpSize = 0.1;
	float SpecularFactor = 0.5;	
   //Ross: V is the view direction vector and we are in Eye Coordinates, so EyePos is (0,0,0)  
 
  
    
    vec3 litColor;
    vec2 c = BumpDensity * gl_TexCoord[0].st;
    vec2 p = fract(c) - vec2(0.5);
    float d, f;
     d = dot(p,p);
    f = inversesqrt(d + 1.0);
	if(d>=BumpSize){
		p = vec2(0,0);
		f = 1.0;}
    vec3 normDelta = vec3(p.x,p.y,1.0) * f;
     vec3 r = normalize(reflect(ld,normDelta));
     litColor = SurfaceColor.rgb * max(dot(normDelta, ld), 0.0);
    float spec = max(dot(ed,r),0.0);
	spec = pow(spec, 6.0);
	spec *= SpecularFactor;
	litColor = min(litColor + spec, vec3(1.0));

	colorOut = vec4(litColor, SurfaceColor.a);      

}    